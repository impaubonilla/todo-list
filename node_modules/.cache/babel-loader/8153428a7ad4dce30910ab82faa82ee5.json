{"ast":null,"code":"var _jsxFileName = \"/Users/paubonilla/_dev/my-list/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from './components/List';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: '',\n      todosToList: [// you can remove/comment these values \n      {\n        value: \"This value from App is passing to List --> passing and receiving by Task 1\",\n        done: false\n      }, {\n        value: \"From App to List mapping to Task 2\",\n        done: false\n      }, {\n        value: \"Same same\",\n        done: true\n      }]\n    };\n\n    this.handleChange = e => {\n      // console.log(e.target.value);\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleClick = i => {\n      console.log('IT WORKED!!!', i); // the copy another todosToList\n\n      const todosToList = this.state.todosToList;\n      todosToList[i].done = !todosToList[i].done; // this will not work without this.setState()\n\n      this.setState({\n        todosToList\n      });\n    };\n\n    this.handleSubmit = e => {\n      // * preventDefault is a method that keep the page from re-rendering\n      e.preventDefault();\n      const newTodo = {\n        value: this.state.inputValue,\n        done: false\n      }; // * make another function with any name(todosFromApp) that copy the function todosToList\n\n      const todosFromApp = this.state.todosToList; // * create a push method having a value(newTodo) inside with new function(todosFromApp)\n\n      todosFromApp.push(newTodo); // * use a setState method to copy todosFromApp and delete inputValue\n\n      this.setState({\n        todosFromApp,\n        inputValue: ''\n      });\n      console.log('YES!!!');\n    };\n\n    this.handleDelete = () => {\n      const del = {\n        value: this.state.inputValue\n      };\n      const todosDelete = this.state.todosToList;\n      todosDelete.push(del);\n      this.setState({});\n    };\n  }\n\n  render() {\n    // const newNumbers = () => {\n    //   name = 'Pau'\n    // }\n    // console.log(newNumbers);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form // inputValue needs to pass the value to Form.js component\n    // todo -- using \"state\" to pass a function using \"props\" to Form.js component\n    , {\n      inputValue: this.state.inputValue,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(List, {\n      handleClick: this.handleClick // this is passing to List.js and then to Task.js compopnents\n      ,\n      handleDelete: this.handleDelete // this is passing to List.js and then to Task.js compopnents\n      ,\n      todosPassToList: this.state.todosToList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paubonilla/_dev/my-list/src/App.js"],"names":["React","Component","Form","List","App","state","inputValue","todosToList","value","done","handleChange","e","setState","target","handleClick","i","console","log","handleSubmit","preventDefault","newTodo","todosFromApp","push","handleDelete","del","todosDelete","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport List from './components/List';\n\nclass App extends Component {\n  // * the state is passing the value to Form.js component\n  // * value={this.props.inputValue}\n  state = {\n    inputValue: '',\n    todosToList: [\n      // you can remove/comment these values \n      { value: \"This value from App is passing to List --> passing and receiving by Task 1\", done: false },\n      { value: \"From App to List mapping to Task 2\", done: false },\n      { value: \"Same same\", done: true }\n    ]\n  }\n  // * moved from Form.js component\n  handleChange = (e) => {\n    // console.log(e.target.value);\n    this.setState({ inputValue: e.target.value });\n  }\n\n  handleClick = (i) => {\n    console.log('IT WORKED!!!', i);\n    // the copy another todosToList\n    const todosToList = this.state.todosToList\n    todosToList[i].done = !todosToList[i].done; // this will not work without this.setState()\n    this.setState({ todosToList })\n  }\n\n  handleSubmit = (e) => {\n    // * preventDefault is a method that keep the page from re-rendering\n    e.preventDefault();\n    const newTodo = {\n      value: this.state.inputValue,\n      done: false\n    };\n    // * make another function with any name(todosFromApp) that copy the function todosToList\n    const todosFromApp = this.state.todosToList;\n    // * create a push method having a value(newTodo) inside with new function(todosFromApp)\n    todosFromApp.push(newTodo);\n    // * use a setState method to copy todosFromApp and delete inputValue\n    this.setState({ todosFromApp, inputValue: '' })\n    console.log('YES!!!');\n  }\n\n  handleDelete = () => {\n    const del = {\n      value: this.state.inputValue,\n    };\n    const todosDelete = this.state.todosToList;\n    todosDelete.push(del);\n    this.setState({ })\n  }\n  render() {\n    // const newNumbers = () => {\n    //   name = 'Pau'\n    // }\n    // console.log(newNumbers);\n    return (\n      <div className=\"App\">\n        <Form\n          // inputValue needs to pass the value to Form.js component\n          // todo -- using \"state\" to pass a function using \"props\" to Form.js component\n          inputValue={this.state.inputValue}\n\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleDelete={this.handleDelete}\n        />\n        <List \n          handleClick={this.handleClick} // this is passing to List.js and then to Task.js compopnents\n          handleDelete={this.handleDelete} // this is passing to List.js and then to Task.js compopnents\n          todosPassToList={this.state.todosToList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}