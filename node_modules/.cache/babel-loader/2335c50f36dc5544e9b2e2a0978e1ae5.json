{"ast":null,"code":"var _jsxFileName = \"/Users/paubonilla/_dev/my-list/src/components/Form.js\";\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n  // todo -- copied and pasted state and moving it to App component\n  // ! because this code is not working \n  // state = {\n  //     inputValue: ''\n  // }\n  // * handleChange is no longer working because it is trying \n  // * to change Form.js component \n  // * so this function needs to move\n  // * to the parent (App.js component)\n\n  /*\n  ! this code is not working\n   handleChange = (e) => {\n       console.log(e.target.value);\n       this.setState({ inputValue: e.target.value });\n   }\n  */\n  render() {\n    return (// todo --  add onSubmit function to form with any value name (handleSubmit)\n      // * and handleSubmit receives the function from App.js component\n      React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => this.props.handleSubmit(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        // ? if \"state\" is used replace it with \"props\"\n        // * add \"props\" to onChange because App.js is passing handleChange to Form.js\n        onChange: e => this.props.handleChange(e) // * value={this.state.inputValue}\n        // from \"state\" it changes \"props\" because App.js component\n        // todo -- needs to access by passing (inputValue) \n        // to Form.js component by usig \"props\"\n        ,\n        value: this.props.inputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/paubonilla/_dev/my-list/src/components/Form.js"],"names":["React","Component","Form","render","e","props","handleSubmit","handleChange","inputValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAQAE,EAAAA,MAAM,GAAG;AACL,WACI;AACA;AACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,KAAL,CAAWC,YAAX,CAAwBF,CAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI;AACA;AACA,QAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKC,KAAL,CAAWE,YAAX,CAAwBH,CAAxB,CAHrB,CAII;AACA;AACA;AACA;AAPJ;AAQI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWG,UARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAHJ;AAkBH;;AAvCwB;;AA0C7B,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nclass Form extends Component {\n    // todo -- copied and pasted state and moving it to App component\n    // ! because this code is not working \n    // state = {\n    //     inputValue: ''\n    // }\n\n    // * handleChange is no longer working because it is trying \n    // * to change Form.js component \n    // * so this function needs to move\n    // * to the parent (App.js component)\n\n    /*\n    ! this code is not working\n     handleChange = (e) => {\n         console.log(e.target.value);\n         this.setState({ inputValue: e.target.value });\n     }\n    */\n\n    render() {\n        return (\n            // todo --  add onSubmit function to form with any value name (handleSubmit)\n            // * and handleSubmit receives the function from App.js component\n            <div className=\"Form\">\n                <form onSubmit={(e) => this.props.handleSubmit(e)}>\n                    <input\n                        // ? if \"state\" is used replace it with \"props\"\n                        // * add \"props\" to onChange because App.js is passing handleChange to Form.js\n                        onChange={(e) => this.props.handleChange(e)}\n                        // * value={this.state.inputValue}\n                        // from \"state\" it changes \"props\" because App.js component\n                        // todo -- needs to access by passing (inputValue) \n                        // to Form.js component by usig \"props\"\n                        value={this.props.inputValue}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}